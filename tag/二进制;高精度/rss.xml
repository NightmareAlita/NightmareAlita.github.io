<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>NERV - SN • Posts by &#34;二进制;高精度&#34; tag</title>
        <link>http://example.com</link>
        <description></description>
        <language>zh-cn</language>
        <pubDate>Fri, 18 Aug 2023 17:00:00 +0800</pubDate>
        <lastBuildDate>Fri, 18 Aug 2023 17:00:00 +0800</lastBuildDate>
        <category>二进制;位运算</category>
        <category>构造</category>
        <category>哈夫曼树;哈夫曼编码</category>
        <category>栈</category>
        <category>构造;二进制;枚举</category>
        <category>枚举</category>
        <category>平面几何</category>
        <category>二进制</category>
        <category>二进制;高精度</category>
        <category>对顶堆;数据结构</category>
        <category>线段树;数据结构</category>
        <category>分治</category>
        <category>平衡树;数据结构</category>
        <category>贪心</category>
        <category>割点;Tarjan</category>
        <category>数学</category>
        <category>割边;Tarjan</category>
        <category>线性筛</category>
        <category>状态压缩;容斥</category>
        <category>容斥;根号分治</category>
        <category>图论</category>
        <category>矩阵加速;动态规划</category>
        <category>矩阵乘法;倍增</category>
        <category>OIer 日记</category>
        <category>雷电法王</category>
        <item>
            <guid isPermalink="true">http://example.com/2023/08/18/P1045%20[NOIP2003%20%E6%99%AE%E5%8F%8A%E7%BB%84]%20%E9%BA%A6%E6%A3%AE%E6%95%B0/</guid>
            <title>题解 洛谷 P1045 [NOIP2003 普及组] 麦森数</title>
            <link>http://example.com/2023/08/18/P1045%20[NOIP2003%20%E6%99%AE%E5%8F%8A%E7%BB%84]%20%E9%BA%A6%E6%A3%AE%E6%95%B0/</link>
            <category>二进制;高精度</category>
            <pubDate>Fri, 18 Aug 2023 17:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1&gt;题解 洛谷 P1045 [NOIP2003 普及组] 麦森数&lt;/h1&gt;
&lt;h3 id=&#34;简要题意：&#34;&gt;简要题意：&lt;/h3&gt;
&lt;p&gt;给定一个数$p$，求$2^p$-1的位数和后500位的值，其中$p\in [1\times10^3,3.1\times10^6]$。&lt;/p&gt;
&lt;h2 id=&#34;策略分析：&#34;&gt;策略分析：&lt;/h2&gt;
&lt;p&gt;我们可以将这个问题分为两步来处理，第一步求出位数，第二步求后$500$位&lt;/p&gt;
&lt;h3 id=&#34;求出位数：&#34;&gt;求出位数：&lt;/h3&gt;
&lt;p&gt;首先有一个非常平凡的结论：$10^k$的位数为$k+1$。那么一个$10^k$的数的位数也等于$lg10^k$，设$n =2^p$，因为不存在最后一位为$0$的$2^p$的数，所以$2^p-1$的位数一定与$2^p$的位数相同。我们希望能够将$10^k$所具有的性质应用在$2^p$中，设$10^m=2$，那么$lg2=m$，所以$10^{lg2}=2$，所以$n=2^p=(10^{lg2})^p=10^{(lg2)·p}$，那么$n$的位数就等于$10^{(lg2)·p}$的位数，即$(lg2)·p+1$，那这不就简单多了，直接$cmath$库里随便一搞就出来了&lt;/p&gt;
&lt;h3 id=&#34;求后500位的值：&#34;&gt;求后500位的值：&lt;/h3&gt;
&lt;p&gt;我们发现一个朴素的高精度乘法的时间复杂度是$O(n^2)$，那么就寄了，所以我们要用&lt;strong&gt;超级快速的高精乘法&lt;/strong&gt;，C++里什么样的数据类型存的数最大呢？~~（谁刚说__$int128$拉出去枪毙$5$分钟）~~显然我们要用$unsigned$  $long$  $long$来存储这500位，那么我们就要尽量挑战它的极限，一次乘$2^{60}$ &lt;s&gt;（讨厌没有边界感的$ull$）&lt;/s&gt;，这样我们就可以在更短的时间内完成计算&lt;/p&gt;
&lt;h3 id=&#34;AC代码：&#34;&gt;AC代码：&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;#include &amp;lt;iostream&amp;gt;
#include &amp;lt;cstdio&amp;gt;
#include &amp;lt;cmath&amp;gt;
#define ULL unsigned long long
using namespace std;

namespace Rick &amp;#123; int work() &amp;#123; cout &amp;lt;&amp;lt; &amp;quot;Never gonna give you up, never gonna let you down~\n&amp;quot;; &amp;#125; &amp;#125;
namespace SHAWN &amp;#123;
    const int N = 507;
    ULL t[N] = &amp;#123; 1 &amp;#125;;
    int p;
    int work()
    &amp;#123;
        cin &amp;gt;&amp;gt; p;
        cout &amp;lt;&amp;lt; (int)(log10(2) * p) + 1 &amp;lt;&amp;lt; &#39;\n&#39;;
        for (; p &amp;gt; 0; p -= 60) &amp;#123;
            ULL jin = 0;
            for (int i = 0; i &amp;lt; 500; ++i) &amp;#123;
                if (p &amp;gt; 60) &amp;#123; t[i] &amp;lt;&amp;lt;= 60; &amp;#125;
                else &amp;#123; t[i] &amp;lt;&amp;lt;= p; &amp;#125;
                t[i] += jin; jin = t[i] / 10; t[i] %= 10;
            &amp;#125;
        &amp;#125;
        t[0] -= 1; 
        // 最开始为了让乘法有值我们设成了1，所以一通操作后要减1
        for (int i = 499; i &amp;gt;= 0; --i) &amp;#123;
            cout &amp;lt;&amp;lt; t[i];
            if (! (i % 50)) &amp;#123; cout &amp;lt;&amp;lt; &#39;\n&#39;; &amp;#125;
        &amp;#125;
        return 0;
    &amp;#125;
&amp;#125;

signed int main() &amp;#123;
    ios :: sync_with_stdio(false);
    cin.tie(nullptr);
    // return SHAWN :: work();
    return Rick :: work();
&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
 ]]></description>
        </item>
    </channel>
</rss>
